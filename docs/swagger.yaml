definitions:
  http.UserRequest:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  storage.Task:
    description: Данные задачи
    properties:
      id:
        type: string
      result:
        type: string
      status:
        type: string
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: делает авторизацию пользователя и возвращает
      parameters:
      - description: Данные для логина пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/http.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: user_id
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: логин пользователя
      tags:
      - users
  /register:
    post:
      consumes:
      - application/json
      description: Регистрирует нового пользователя и возвращает его ID
      parameters:
      - description: Данные для регистрации пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/http.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: user_id
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Регистрация пользователя
      tags:
      - users
  /result/{task_id}:
    get:
      description: Получает результат задачи по ID. Требуется токен аутентификации.
      parameters:
      - description: Bearer {auth_token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: Task ID
        in: path
        name: task_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получение результата задачи
      tags:
      - tasks
  /status/{task_id}:
    get:
      description: Получает статус задачи по ID. Требуется токен аутентификации.
      parameters:
      - description: Bearer {auth_token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: Task ID
        in: path
        name: task_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получение статуса задачи
      tags:
      - tasks
  /task:
    post:
      consumes:
      - application/json
      description: Создаёт новую задачу. Требуется токен аутентификации.
      parameters:
      - description: Bearer {auth_token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: Task Info
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/storage.Task'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Создание задачи
      tags:
      - tasks
swagger: "2.0"
